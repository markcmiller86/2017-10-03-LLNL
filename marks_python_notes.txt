Changes:
    * Confirm version
        python --version

    * Do some easy but powerful things first, then
      learn more of the details about python programming.

        python is a programming language. But part of what
        makes it so powerful is all of the extra features
        that have been added to it by the "python community"
        These extra features are called 'modules'. So, first
        we are going to learn about numpy and matplotlib modules.

    * First, some review of shell and take a look at the files
        - cd data
        - ls
        - ls -1
        - cat inflammation-01.csv
        - What if we wanted to know how many rows and how many columns?
        - a 'row' is a 'line' in the file...what is a shell function we
          learned recently that would tell us how many lines?
        - wc -l inflammation-01.csv
        - head -n 1 inflammation-01.csv
        - head -n 1 inflammation-01.csv | tr -d '0123456789' | wc -c
            - am using an new shell function, 'tr' (translate) that
              with -d (delete) option. All that is left is commas.
        - head -n 1 inflammation-01.csv | tr -d '0-9' | wc -c

        - each row represents a patient, each column one day of
          that patient's values

    * now, start python3

Loading and printing data
    * import numpy
        - like getting a piece of lab equipment and setting it up on the lab
          bench
        - will use a function in numpy module (loadtxt) to read the data in
          this file into a numpy object
    * help() all help on python
    * help(numpy)
    * help(numpy.loadtxt)
    * numpy.loadtxt(fname='inflammation-01.csv',delimiter=',')
       - all this did was read the contents of the file and print it.
       - We have to tell python to put that data somewhere so it
         will remember (memory) it for us when we want to access it
       - what would we do if the file was space delimited?
       - what would we do if the file was in a sub-directory named foo?
    * data = numpy.loadtxt(fname='inflammation-01.csv',delimiter=',')
       - reading x = 2 ==> x takes the value 2
       - read the equal sign as 'takes the value'
       - Show command-line editing with arrow keys and ctrl-a, ctrl-e
    * print(data)
       - note, default action for python to take is to 'print' so can
         save a lot of typing by just typing the object's name
    * data

What is an array?
    * type(data)
    * print numpy.shape(data)
        - remark...agrees with what we learned from shell commands, above
    * numpy.shape(data)
    * print(data.shape)
    * data.shape
    * data[0]
    * data[1]
    * data[0:3]
    * data[0][0] and data[0,0]

Using numpy on the array:
    * patient_0 = data[0, :]
        - patient_0 = data[0]
    * numpy.mean(patient_0)
    * numpy.mean(data[2])
    * numpy.mean(data[5:11]
    * numpy.mean(data)
    * numpy.mean(data, axis=0)
        - what do we do if we wanna store/remember the result of this operation

Plotting
    * import matplotlib.pyplot as pyp
    * help(matplotlib.pyplot) fails
    * help(pyp)
    * image = pyp.imshow(data)
    * pyp.show(image)
    * plot = pyp.plot(patient_0)
    * pyp.show(plot)
    
